/*!********************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./node_modules/sass-loader/dist/cjs.js!./node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[1].use[3]!./src/scss/reset/layout.scss ***!
  \********************************************************************************************************************************************************************************************************************************/
/* == Base colours == */
/* == List colours  == */
/* == UI Colours == */
/* == Bluestone == */
/* == Font family == */
/* == Line-height == */
/* == Tracking == */
:root {
  font-size: 16px;
}

html {
  box-sizing: border-box;
  scroll-behavior: smooth;
  max-width: 100%;
  overflow-x: hidden;
}

*,
*:before,
*:after {
  box-sizing: inherit;
  margin: 0;
  padding: 0;
}

body {
  max-width: 100%;
  overflow-x: hidden;
  margin: 0;
  padding: 0;
  font-family: "objektiv-mk1", sans-serif;
  font-weight: 400;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  color: #2C305D;
  background-color: #FFFFFF;
}
body.disable-scroll {
  overflow-y: hidden;
}

textarea,
input[type=text],
input[type=number],
input[type=tel],
input[type=email],
input[type=button],
input[type=submit],
select {
  box-shadow: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}
/*!********************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./node_modules/sass-loader/dist/cjs.js!./node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[1].use[3]!./src/scss/elements/btn.scss ***!
  \********************************************************************************************************************************************************************************************************************************/
/* == Base colours == */
/* == List colours  == */
/* == UI Colours == */
/* == Bluestone == */
/* == Font family == */
/* == Line-height == */
/* == Tracking == */
.btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  font-size: 0.875rem;
  min-height: 45px;
  width: 100%;
  max-width: 400px;
  background-color: #9F956F;
  color: #fff;
  text-decoration: none;
  appearance: none;
  cursor: pointer;
  padding: 8px 15px;
  font-family: "objektiv-mk1", sans-serif;
  font-weight: 700;
  font-style: normal;
  transition: background-color 0.3s ease;
}
.btn:hover, .btn:focus {
  background-color: #7B5E3D;
}
@media only screen and (min-width: 48rem) {
  .btn {
    font-size: 1.3125rem;
    min-height: 65px;
  }
}
@media only screen and (min-width: 80rem) {
  .btn {
    font-size: 1.8125rem;
    min-height: 104px;
  }
}
/*!************************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./node_modules/sass-loader/dist/cjs.js!./node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[1].use[3]!./src/scss/elements/typography_standard.scss ***!
  \************************************************************************************************************************************************************************************************************************************************/
/* == Base colours == */
/* == List colours  == */
/* == UI Colours == */
/* == Bluestone == */
/* == Font family == */
/* == Line-height == */
/* == Tracking == */
p {
  margin-top: 5px;
  margin-bottom: 20px;
  font-size: 1.5625rem;
  line-height: 1.2;
}
/*!********************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./node_modules/sass-loader/dist/cjs.js!./node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[1].use[3]!./src/scss/layouts/hero.scss ***!
  \********************************************************************************************************************************************************************************************************************************/
/* == Base colours == */
/* == List colours  == */
/* == UI Colours == */
/* == Bluestone == */
/* == Font family == */
/* == Line-height == */
/* == Tracking == */
.hero {
  background-color: #F2E9DE;
  position: relative;
}
.hero__container {
  width: 70%;
  max-width: 990px;
  margin-left: auto;
  margin-right: auto;
  display: flex;
  flex-direction: column;
  align-items: center;
  position: relative;
  z-index: 1;
  padding: 35px 0;
}
@media only screen and (min-width: 48rem) {
  .hero__container {
    width: 65%;
    padding: 75px 0;
  }
}
@media only screen and (min-width: 80rem) {
  .hero__container {
    padding: 90px 0 96px 0;
  }
}
.hero__logo {
  width: 70px;
  margin-bottom: 15px;
}
@media only screen and (min-width: 48rem) {
  .hero__logo {
    width: 90px;
    margin-bottom: 25px;
  }
}
@media only screen and (min-width: 80rem) {
  .hero__logo {
    width: 132px;
    margin-bottom: 45px;
  }
}
.hero__logo img {
  width: 100%;
  height: auto;
}
.hero__titles {
  text-align: center;
}
.hero__titles h1 {
  color: #6E0803;
  text-transform: uppercase;
  font-family: "Anton", sans-serif;
  font-weight: 400;
  font-style: normal;
  line-height: 1.2;
  font-size: 1.875rem;
  margin-bottom: 15px;
}
@media only screen and (min-width: 48rem) {
  .hero__titles h1 {
    font-size: 3.625rem;
    margin-bottom: 20px;
  }
}
@media only screen and (min-width: 80rem) {
  .hero__titles h1 {
    font-size: 4.875rem;
    margin-bottom: 25px;
  }
}
.hero__titles h2 {
  color: #7B5E3D;
  text-transform: uppercase;
  font-family: "Poppins", sans-serif;
  font-weight: 600;
  font-style: normal;
  font-size: 1.25rem;
  line-height: 1.2;
  letter-spacing: 0.1em;
}
@media only screen and (min-width: 48rem) {
  .hero__titles h2 {
    font-size: 1.9375rem;
  }
}
@media only screen and (min-width: 80rem) {
  .hero__titles h2 {
    font-size: 2.5625rem;
  }
}
.hero__titles > *:first-child {
  margin-top: 0;
}
.hero__titles > *:last-child {
  margin-bottom: 0;
}
.hero__media {
  width: 25%;
  position: absolute;
  max-width: 144px;
  padding-bottom: 100%;
  aspect-ratio: 1/1;
}
@supports (aspect-ratio: 1/1) {
  .hero__media {
    padding-bottom: 0;
  }
}
@media only screen and (min-width: 48rem) {
  .hero__media {
    max-width: 244px;
  }
}
@media only screen and (min-width: 80rem) {
  .hero__media {
    max-width: 344px;
  }
}
.hero__media > img {
  display: block;
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
}
.hero__media--one {
  top: 50%;
  left: -41px;
  transform: translateY(-50%) rotate(6deg);
}
@media only screen and (min-width: 80rem) {
  .hero__media--one {
    top: 150px;
    left: -108px;
    transform: translateY(0%) rotate(6deg);
  }
}
.hero__media--two {
  top: 50%;
  right: -45px;
  transform: translateY(-50%) rotate(-15deg);
}
@media only screen and (min-width: 80rem) {
  .hero__media--two {
    top: 128px;
    right: -111px;
    transform: translateY(0%) rotate(-15deg);
  }
}
/*!*************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./node_modules/sass-loader/dist/cjs.js!./node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[1].use[3]!./src/scss/layouts/animation.scss ***!
  \*************************************************************************************************************************************************************************************************************************************/
/* == Base colours == */
/* == List colours  == */
/* == UI Colours == */
/* == Bluestone == */
/* == Font family == */
/* == Line-height == */
/* == Tracking == */
.animation {
  position: relative;
  padding-top: 46.4285714286%;
  aspect-ratio: 28/13;
}
@supports (aspect-ratio: 28/13) {
  .animation {
    padding-top: 0;
  }
}
.animation__container {
  width: 70%;
  margin-left: auto;
  margin-right: auto;
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100%;
  position: relative;
  z-index: 1;
}
.animation__container .btn {
  font-weight: 500;
  max-width: 298px;
}
@media only screen and (min-width: 80rem) {
  .animation__container .btn {
    font-size: 1.4375rem;
    min-height: 77px;
  }
}
.animation__video {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}
.animation__video video {
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
}
/*!***********************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./node_modules/sass-loader/dist/cjs.js!./node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[1].use[3]!./src/scss/layouts/welcome.scss ***!
  \***********************************************************************************************************************************************************************************************************************************/
/* == Base colours == */
/* == List colours  == */
/* == UI Colours == */
/* == Bluestone == */
/* == Font family == */
/* == Line-height == */
/* == Tracking == */
.welcome {
  position: relative;
  padding-top: 48px;
  padding-bottom: 48px;
}
@media only screen and (min-width: 48rem) {
  .welcome {
    padding-top: 98px;
    padding-bottom: 98px;
  }
}
@media only screen and (min-width: 80rem) {
  .welcome {
    padding-top: 148px;
    padding-bottom: 148px;
  }
}
.welcome__container {
  color: #fff;
  width: 70%;
  max-width: 900px;
  margin-left: auto;
  margin-right: auto;
  position: relative;
  z-index: 1;
  font-family: "objektiv-mk1", sans-serif;
  font-weight: 500;
  font-style: normal;
}
.welcome__container p {
  font-size: 1rem;
  line-height: 1.5;
}
@media only screen and (min-width: 48rem) {
  .welcome__container p {
    font-size: 1.25rem;
  }
}
@media only screen and (min-width: 80rem) {
  .welcome__container p {
    font-size: 1.5625rem;
  }
}
.welcome__container a {
  color: #B9B088;
  text-decoration: none;
  transition: color 0.3s ease;
}
.welcome__container a:hover, .welcome__container a:focus {
  color: #9F956F;
}
.welcome__media {
  position: absolute;
}
.welcome__media > img {
  display: block;
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
}
.welcome__media--one {
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: -1;
}
.welcome__media--one::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(44, 48, 93, 0.65);
}
.welcome__media--two, .welcome__media--three {
  width: 25%;
  max-width: 186px;
  padding-top: 100%;
  transform-origin: center;
  aspect-ratio: 1/1;
}
@supports (aspect-ratio: 1/1) {
  .welcome__media--two, .welcome__media--three {
    padding-top: 0;
  }
}
@media only screen and (min-width: 48rem) {
  .welcome__media--two, .welcome__media--three {
    max-width: 286px;
  }
}
@media only screen and (min-width: 80rem) {
  .welcome__media--two, .welcome__media--three {
    max-width: 386px;
  }
}
.welcome__media--two {
  top: 120px;
  left: -9%;
  transform: rotate(10deg);
}
.welcome__media--three {
  top: 162px;
  right: -9%;
  transform: rotate(10deg);
}
/*!***********************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./node_modules/sass-loader/dist/cjs.js!./node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[1].use[3]!./src/scss/layouts/contact.scss ***!
  \***********************************************************************************************************************************************************************************************************************************/
/* == Base colours == */
/* == List colours  == */
/* == UI Colours == */
/* == Bluestone == */
/* == Font family == */
/* == Line-height == */
/* == Tracking == */
.contact {
  background-color: #6E0803;
  padding-top: 55px;
  padding-bottom: 55px;
  position: relative;
}
@media only screen and (min-width: 48rem) {
  .contact {
    padding-top: 85px;
    padding-bottom: 85px;
  }
}
@media only screen and (min-width: 80rem) {
  .contact {
    padding-top: 105px;
    padding-bottom: 105px;
  }
}
.contact__container {
  color: #fff;
  text-align: center;
  display: flex;
  flex-direction: column;
  align-items: center;
  position: relative;
  z-index: 1;
  width: 70%;
  max-width: 833px;
  margin-left: auto;
  margin-right: auto;
}
.contact__container h2 {
  text-transform: uppercase;
  font-size: 1.875rem;
  margin-bottom: 30px;
}
@media only screen and (min-width: 48rem) {
  .contact__container h2 {
    font-size: 2.5rem;
    margin-bottom: 40px;
  }
}
@media only screen and (min-width: 80rem) {
  .contact__container h2 {
    font-size: 3.125rem;
    margin-bottom: 50px;
  }
}
.contact__container .btn {
  width: 50%;
}
.contact__dates {
  margin-bottom: 50px;
}
@media only screen and (min-width: 48rem) {
  .contact__dates {
    margin-bottom: 70px;
  }
}
@media only screen and (min-width: 80rem) {
  .contact__dates {
    margin-bottom: 90px;
  }
}
.contact__dates > * {
  font-size: 1.125rem;
}
@media only screen and (min-width: 48rem) {
  .contact__dates > * {
    font-size: 1.75rem;
  }
}
@media only screen and (min-width: 80rem) {
  .contact__dates > * {
    font-size: 2.25rem;
  }
}
.contact__dates h2 {
  text-transform: none;
  margin-top: 30px;
  margin-bottom: 15px;
}
.contact__dates p,
.contact__dates address {
  font-family: "objektiv-mk1", sans-serif;
  font-weight: 500;
  font-style: normal;
}
.contact__purchase {
  display: inline-block;
  height: auto;
  width: 100%;
  max-width: 215px;
  margin-bottom: 30px;
  transition: opacity 0.3s ease;
}
.contact__purchase > img {
  display: block;
  width: 100%;
  height: auto;
}
@media only screen and (min-width: 48rem) {
  .contact__purchase {
    max-width: 315px;
    margin-bottom: 50px;
  }
}
@media only screen and (min-width: 80rem) {
  .contact__purchase {
    margin-bottom: 70px;
  }
}
.contact__purchase:hover, .contact__purchase:focus {
  opacity: 0.75;
}
.contact__links {
  padding-top: 15px;
  width: 100%;
  max-width: 838px;
  justify-content: center;
  margin: 0 auto 65px auto;
  display: flex;
  flex-wrap: wrap;
  gap: 15px;
}
.contact__links .btn {
  width: calc(50% - 8px);
}
@media only screen and (min-width: 48rem) {
  .contact__links {
    gap: 20px;
    padding-top: 20px;
  }
  .contact__links .btn {
    width: calc(50% - 10px);
  }
}
@media only screen and (min-width: 80rem) {
  .contact__links {
    gap: 25px;
    padding-top: 25px;
  }
  .contact__links .btn {
    width: calc(50% - 13px);
  }
}
.contact__further {
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;
}
@media only screen and (min-width: 48rem) {
  .contact__further {
    font-size: 1.5rem;
  }
}
@media only screen and (min-width: 80rem) {
  .contact__further {
    font-size: 2.0625rem;
  }
}
.contact__further a {
  font-weight: 700;
  color: #9F956F;
  text-decoration: none;
}
.contact__media {
  position: absolute;
  width: 25%;
  padding-top: 100%;
  transform-origin: center;
  aspect-ratio: 1/1;
}
@supports (aspect-ratio: 1/1) {
  .contact__media {
    padding-top: 0;
  }
}
.contact__media > img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
}
.contact__media--one, .contact__media--two {
  top: -24px;
  max-width: 186px;
}
@media only screen and (min-width: 48rem) {
  .contact__media--one, .contact__media--two {
    top: -80px;
    max-width: 286px;
  }
}
@media only screen and (min-width: 80rem) {
  .contact__media--one, .contact__media--two {
    max-width: 386px;
  }
}
.contact__media--three, .contact__media--four {
  max-width: 197px;
  top: 50%;
}
@media only screen and (min-width: 48rem) {
  .contact__media--three, .contact__media--four {
    max-width: 297px;
  }
}
@media only screen and (min-width: 80rem) {
  .contact__media--three, .contact__media--four {
    max-width: 397px;
  }
}
.contact__media--one {
  transform: rotate(-3deg);
  left: -25px;
}
@media only screen and (min-width: 48rem) {
  .contact__media--one {
    left: -105px;
  }
}
@media only screen and (min-width: 80rem) {
  .contact__media--one {
    left: -135px;
    top: -226px;
  }
}
.contact__media--two {
  transform: rotate(-9deg);
  right: -25px;
}
@media only screen and (min-width: 48rem) {
  .contact__media--two {
    top: -189px;
    right: -35px;
  }
}
.contact__media--three {
  left: -37px;
  transform: translateY(-50%) rotate(18deg);
}
.contact__media--four {
  right: -35px;
  transform: translateY(-50%) rotate(9deg);
}
/*!***********************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./node_modules/sass-loader/dist/cjs.js!./node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[1].use[3]!./src/scss/layouts/gallery.scss ***!
  \***********************************************************************************************************************************************************************************************************************************/
/* == Base colours == */
/* == List colours  == */
/* == UI Colours == */
/* == Bluestone == */
/* == Font family == */
/* == Line-height == */
/* == Tracking == */
.gallery {
  display: flex;
  flex-wrap: wrap;
}
.gallery__item {
  width: 50%;
  padding-bottom: 100%;
  aspect-ratio: 1/1;
}
@supports (aspect-ratio: 1/1) {
  .gallery__item {
    padding-bottom: 0;
  }
}
@media only screen and (min-width: 48rem) {
  .gallery__item {
    width: 33.333%;
  }
}
@media only screen and (min-width: 80rem) {
  .gallery__item {
    width: 25%;
  }
}
.gallery__item > img {
  display: block;
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
}
/*!**********************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./node_modules/sass-loader/dist/cjs.js!./node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[1].use[3]!./src/scss/layouts/footer.scss ***!
  \**********************************************************************************************************************************************************************************************************************************/
/* == Base colours == */
/* == List colours  == */
/* == UI Colours == */
/* == Bluestone == */
/* == Font family == */
/* == Line-height == */
/* == Tracking == */
.footer__contact {
  background-color: #6E0803;
}
.footer__contact .footer__container {
  padding: 35px 15px 40px 15px;
  text-align: center;
}
@media only screen and (min-width: 48rem) {
  .footer__contact .footer__container {
    padding: 80px 25px;
  }
}
.footer__contact .footer__container > p {
  margin-top: 0;
  margin-bottom: 0;
}
.footer__contact .footer__container a {
  color: #fff;
  text-decoration: none;
  font-family: "objektiv-mk1", sans-serif;
  font-weight: 700;
  font-style: normal;
  font-size: 1rem;
  transition: color 0.3s ease;
}
@media only screen and (min-width: 48rem) {
  .footer__contact .footer__container a {
    font-size: 1.5rem;
  }
}
@media only screen and (min-width: 80rem) {
  .footer__contact .footer__container a {
    font-size: 2.0625rem;
  }
}
.footer__contact .footer__container a:hover, .footer__contact .footer__container a:focus {
  color: #9F956F;
}
.footer__credit {
  background-color: #fff;
}
.footer__credit .footer__container {
  text-align: center;
  width: 100%;
  max-width: 755px;
  margin-left: auto;
  margin-right: auto;
  padding: 20px 15px 30px 15px;
}
@media only screen and (min-width: 48rem) {
  .footer__credit .footer__container {
    padding: 40px 25px 50px 45px;
  }
}
.footer__credit .footer__container > *:first-child {
  margin-top: 0;
}
.footer__credit .footer__container > *:last-child {
  margin-bottom: 0;
}
.footer__credit .footer__container p {
  font-size: 0.75rem;
}
@media only screen and (min-width: 48rem) {
  .footer__credit .footer__container p {
    font-size: 1.25rem;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/